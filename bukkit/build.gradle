buildscript {
    repositories {
        maven {
            url = 'https://plugins.gradle.org/m2/'
        }
        gradlePluginPortal()
    }

    dependencies {
        classpath 'gradle.plugin.com.github.jengelman.gradle.plugins:shadow:7.0.0'
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'maven-publish'
    id 'java'
}

compileJava.options.encoding = 'UTF-8'

// Environment variables for the build set by the build server
ext.buildNumber = System.env.BUILD_NUMBER ?: '0'

defaultTasks 'clean', 'build'

sourceCompatibility = '1.16'
targetCompatibility = '1.16'

archivesBaseName = 'realestate-bukkit'

project.ext.getGitHash = {
    def command = Runtime.getRuntime().exec("git rev-parse --short HEAD")
    def result = command.waitFor()
    return (result == 0) ? command.inputStream.text.trim() : "nogit"
}

repositories {
    mavenLocal()
    maven {
        name = 'aikar'
        url = 'https://repo.aikar.co/content/groups/aikar'
    }
    maven {
        name = 'bstats'
        url = 'https://repo.codemc.org/repository/maven-public'
    }
    maven {
        name = 'essentials'
        url = 'https://ci.ender.zone/plugin/repository/everything/'
    }
    maven {
        name = 'griefdefender'
        url = 'https://repo.glaremasters.me/repository/bloodshot'
    }
    maven {
        name = 'jitpack'
        url = 'https://jitpack.io'
    }
    maven {
        name = 'permissionsex'
        url = 'https://repo.glaremasters.me/repository/permissionsex'
    }
    maven {
        name = 'sk89q'
        url = 'https://maven.sk89q.com/repo'
    }
    maven {
        name = 'sonatype_releases'
        url = 'https://oss.sonatype.org/content/repositories/releases'
    }
    maven {
        name = 'spigot'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots'
    }
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/maven/'
    }
    maven {
        name = 'sonatype_snapshots'
        url = 'https://oss.sonatype.org/content/repositories/snapshots'
    }
    maven {
        name = 'triumph'
        url = 'https://repo.mattstudios.me/artifactory/public/'
    }
}

sourceSets {
    api
}

dependencies {
    compileOnly "com.griefdefender:api:2.1.0-SNAPSHOT"
    compileOnly "com.github.TechFortress:GriefPrevention:16.18"
    compileOnly fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly "net.ess3:EssentialsX:2.17.1"
    compileOnly "net.milkbowl.vault:VaultAPI:1.7"
    compileOnly "org.spigotmc:spigot-api:1.18.1-R0.1-SNAPSHOT"
    implementation "com.github.EtienneDx:AnnotationConfig:e9eab24"
    implementation "co.aikar:acf-core:0.5.0-SNAPSHOT"
    implementation "co.aikar:acf-paper:0.5.0-SNAPSHOT"
    implementation "co.aikar:locales:1.0-SNAPSHOT"
    implementation "co.aikar:Table:1.0.0-SNAPSHOT"
    //implementation "io.leangen.geantyref:geantyref:1.3.11"
    //implementation "com.typesafe:config:1.3.2"
    compileOnly "org.apache.commons:commons-lang3:3.9"
    compileOnly "org.checkerframework:checker:2.8.2"
    compileOnly "net.kyori:adventure-api:4.9.3"
    compileOnly "net.kyori:adventure-key:4.9.3"
    compileOnly "net.kyori:adventure-nbt:4.9.3"
    compileOnly "net.kyori:adventure-platform-api:4.0.1"
    compileOnly "net.kyori:adventure-platform-spongeapi:4.0.1"
    compileOnly "net.kyori:adventure-platform-bungeecord:4.0.1"
    compileOnly "net.kyori:adventure-platform-facet:4.0.1"
    compileOnly "net.kyori:adventure-serializer-configurate4:4.9.3"
    compileOnly "net.kyori:adventure-text-serializer-spongeapi:4.0.0-SNAPSHOT"
    compileOnly "net.kyori:adventure-text-serializer-gson:4.9.3"
    compileOnly "net.kyori:adventure-text-serializer-gson-legacy-impl:4.9.3"
    compileOnly "net.kyori:adventure-text-serializer-legacy:4.9.3"
    compileOnly "net.kyori:adventure-text-serializer-plain:4.9.3"
    compileOnly "net.kyori:examination-api:1.1.0"
    compileOnly "net.kyori:examination-string:1.1.0"
    compileOnly "net.kyori:event-api:5.0.0-SNAPSHOT"
}

jar {
    manifest.attributes('Implementation-Title': 'RealEstate')
    manifest.attributes('Implementation-Version': "$version")
    manifest.attributes('Git-Hash': project.ext.getGitHash())
    classifier = 'SNAPSHOT'
    baseName = 'realestate'
}

if (JavaVersion.current().isJava8Compatible()) {
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

tasks.assemble {
   dependsOn(tasks.shadowJar)
}

artifacts {
    archives shadowJar
}

shadowJar {
    classifier = ""
    relocate("co.aikar.locales", "me.EtienneDx.RealEstate.acf")
    relocate("co.aikar.commands", "me.EtienneDx.RealEstate.acf")
    relocate("me.EtienneDx.AnnotationConfig", "me.EtienneDx.RealEstate.AnnotationConfig")

    exclude "dummyThing"
}