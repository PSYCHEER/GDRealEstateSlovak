buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven {
            url = 'https://plugins.gradle.org/m2/'
        }
        maven {
            name = "Sponge"
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }
        mavenCentral()
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:5.0.9'
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'org.spongepowered.gradle.vanilla' version '0.2'
    id 'java'
}

compileJava.options.encoding = 'UTF-8'

group = 'me.EtienneDx'



// Environment variables for the build set by the build server
ext.buildNumber = System.env.BUILD_NUMBER ?: '0'

defaultTasks 'clean', 'build'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

archivesBaseName = 'realestate-sponge8'

project.ext.getGitHash = {
    def command = Runtime.getRuntime().exec("git rev-parse --short HEAD")
    def result = command.waitFor()
    return (result == 0) ? command.inputStream.text.trim() : "nogit"
}

repositories {
    mavenLocal()
    maven {
        name = 'sk89q'
        url = 'https://maven.sk89q.com/repo'
    }
    maven {
        name = 'bstats'
        url = 'https://repo.codemc.org/repository/maven-public'
    }
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/maven/'
    }
    maven {
        name = 'sonatype_releases'
        url = 'https://oss.sonatype.org/content/repositories/releases'
    }
    maven {
        name = 'sonatype_snapshots'
        url = 'https://oss.sonatype.org/content/repositories/snapshots'
    }
    maven {
        name = 'glare'
        url = 'https://repo.glaremasters.me/repository/bloodshot'
    }
    maven {
        name = 'aikar'
        url = 'https://repo.aikar.co/content/groups/aikar'
    }
    maven {
        name = 'jitpack'
        url = 'https://jitpack.io'
    }
    maven {
        name = 'nucleus'
        url = 'https://repo.drnaylor.co.uk/artifactory/list/minecraft'
    }
}

minecraft {
    version("1.16.5")
        project.sourceSets.main.resources
            .filter { it.name.endsWith(".accesswidener") }
            .files.forEach { accessWideners(it) }

    runs {
        server()
    }
}

sourceSets {
    api
}

dependencies {
    annotationProcessor('org.spongepowered:spongeapi:8.0.0') {
        exclude(module: 'configurate-core')
        exclude(module: 'configurate-hocon')
        exclude(module: 'configurate-gson')
        exclude(module: 'configurate-yaml')
    }
    compileOnly('org.spongepowered:spongeapi:8.0.0') {
        exclude(module: 'configurate-core')
        exclude(module: 'configurate-hocon')
        exclude(module: 'configurate-gson')
        exclude(module: 'configurate-yaml')
    }

    compileOnly fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly "org.spongepowered:sponge:1.16.5-8.0.0-SNAPSHOT:dev"
    compileOnly "com.griefdefender:api:2.1.0-SNAPSHOT"
    compileOnly "com.github.NucleusPowered:Nucleus:v3-SNAPSHOT"
    implementation "co.aikar:acf-core:0.5.0-SNAPSHOT"
    implementation "co.aikar:acf-sponge8:0.5.1-SNAPSHOT"
    implementation "co.aikar:locales:1.0-SNAPSHOT"
    implementation "co.aikar:Table:1.0.0-SNAPSHOT"
    implementation "io.leangen.geantyref:geantyref:1.3.11"
    implementation ("org.spongepowered:configurate-core:4.1.2") {
      transitive = false
    }
    implementation ("org.spongepowered:configurate-gson:4.1.2") {
      transitive = false
    }
    implementation ("org.spongepowered:configurate-hocon:4.1.2") {
      transitive = false
    }
    //compileOnly ("org.spongepowered:configurate-yaml:4.1.2")
    implementation "com.typesafe:config:1.3.2"
    compileOnly "org.apache.commons:commons-lang3:3.9"
    compileOnly "org.checkerframework:checker:2.8.2"
    compileOnly "net.kyori:adventure-api:4.9.3"
    compileOnly "net.kyori:adventure-key:4.9.3"
    compileOnly "net.kyori:adventure-nbt:4.9.3"
    compileOnly "net.kyori:adventure-platform-api:4.0.1"
    compileOnly "net.kyori:adventure-platform-spongeapi:4.0.1"
    compileOnly "net.kyori:adventure-platform-bungeecord:4.0.1"
    compileOnly "net.kyori:adventure-platform-facet:4.0.1"
    compileOnly "net.kyori:adventure-serializer-configurate4:4.9.3"
    compileOnly "net.kyori:adventure-text-serializer-spongeapi:4.0.0-SNAPSHOT"
    compileOnly "net.kyori:adventure-text-serializer-gson:4.9.3"
    compileOnly "net.kyori:adventure-text-serializer-gson-legacy-impl:4.9.3"
    compileOnly "net.kyori:adventure-text-serializer-legacy:4.9.3"
    compileOnly "net.kyori:adventure-text-serializer-plain:4.9.3"
    compileOnly "net.kyori:examination-api:1.1.0"
    compileOnly "net.kyori:examination-string:1.1.0"
    compileOnly "net.kyori:event-api:5.0.0-SNAPSHOT"
}

jar {
    manifest.attributes('Implementation-Title': 'RealEstate')
    manifest.attributes('Implementation-Version': "$version")
    manifest.attributes('Git-Hash': project.ext.getGitHash())
    classifier = 'SNAPSHOT'
    baseName = 'realestate-sponge8'
}

if (JavaVersion.current().isJava8Compatible()) {
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

tasks.assemble {
   dependsOn(tasks.shadowJar)
}

artifacts {
    archives shadowJar
}

    shadowJar {
        classifier = ''

        dependencies {
            include dependency("org.spongepowered:configurate-core:4.1.2")
            include dependency("org.spongepowered:configurate-gson:4.1.2")
            include dependency("org.spongepowered:configurate-hocon:4.1.2")
            include dependency("org.spongepowered:configurate-yaml:4.1.2")
            include dependency("com.typesafe:config:1.3.2")
            include dependency("co.aikar:acf-core:0.5.0-SNAPSHOT")
            include dependency("co.aikar:acf-sponge8:0.5.1-SNAPSHOT")
            include dependency("co.aikar:locales:1.0-SNAPSHOT")
            include dependency("co.aikar:Table:1.0.0-SNAPSHOT")
            include dependency("io.leangen.geantyref:geantyref:1.3.11")
        }

        relocate("com.typesafe.config", "me.EtienneDx.lib.typesafe.config")
        relocate("co.aikar.commands", "me.EtienneDx.lib.aikar")
        relocate("io.leangen.geantyref", "me.EtienneDx.lib.geantyref")
        relocate("org.spongepowered.configurate", "me.EtienneDx.lib.configurate")
        exclude 'META-INF/versions/**', 'META-INF/maven/**'
        classifier = ''
        exclude "dummyThing"
   }