buildscript {
    repositories {
        maven {
            name = 'forge'
            url = 'https://files.minecraftforge.net/maven'
        }
        maven {
            url = 'https://plugins.gradle.org/m2/'
        }
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:5.0.9'
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'java'
    id 'maven-publish'
}

apply plugin: 'net.minecraftforge.gradle'

compileJava.options.encoding = 'UTF-8'

group = 'me.EtienneDx'



// Environment variables for the build set by the build server
ext.buildNumber = System.env.BUILD_NUMBER ?: '0'

defaultTasks 'clean', 'build'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

archivesBaseName = 'realestate-sponge'

project.ext.getGitHash = {
    def command = Runtime.getRuntime().exec("git rev-parse --short HEAD")
    def result = command.waitFor()
    return (result == 0) ? command.inputStream.text.trim() : "nogit"
}

repositories {
    mavenLocal()
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/maven/'
    }
    maven {
        name = 'sonatype_releases'
        url = 'https://oss.sonatype.org/content/repositories/releases'
    }
    maven {
        name = 'sonatype_snapshots'
        url = 'https://oss.sonatype.org/content/repositories/snapshots'
    }
    maven {
        name = 'griefdefender'
        url = 'https://repo.glaremasters.me/repository/bloodshot'
    }
    maven {
        name = 'aikar'
        url = 'https://repo.aikar.co/content/groups/aikar'
    }
    maven {
        name = 'nucleus'
        url = 'https://repo.drnaylor.co.uk/artifactory/list/minecraft'
     }
}

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    //mappings channel: '@MAPPING_CHANNEL@', version: '@MAPPING_VERSION@'
    mappings channel: 'snapshot', version: '20180808-1.12'
    accessTransformer = file('src/main/resources/META-INF/triumph_at.cfg')
}

sourceSets {
    api
}

dependencies {
    annotationProcessor 'org.spongepowered:spongeapi:7.3.0'
    minecraft 'net.minecraft:joined:1.12.2'
    //compileOnly fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly ("org.spongepowered:spongecommon:1.12.2-7.4.4:dev") {
        exclude module: 'testplugins'
        exclude group: 'co.aikar'
    }
    compileOnly "io.github.nucleuspowered:nucleus-api:1.4.2-S7.0"
    compileOnly fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly "com.griefdefender:api:2.1.0-20220122.032038-5"
    implementation "co.aikar:acf-core:0.5.0-SNAPSHOT"
    implementation "co.aikar:acf-sponge:0.5.0-SNAPSHOT"
    implementation "co.aikar:locales:1.0-SNAPSHOT"
    implementation "co.aikar:Table:1.0.0-SNAPSHOT"
    implementation "io.leangen.geantyref:geantyref:1.3.11"
    implementation ("org.spongepowered:configurate-core:4.1.2") {
      transitive = false
    }
    implementation ("org.spongepowered:configurate-gson:4.1.2") {
      transitive = false
    }
    implementation ("org.spongepowered:configurate-hocon:4.1.2") {
      transitive = false
    }
    //compileOnly ("org.spongepowered:configurate-yaml:4.1.2")
    implementation "com.typesafe:config:1.3.2"
    compileOnly "org.apache.commons:commons-lang3:3.9"
    compileOnly "org.checkerframework:checker:2.8.2"
    compileOnly "net.kyori:adventure-api:4.9.3"
    compileOnly "net.kyori:adventure-key:4.9.3"
    compileOnly "net.kyori:adventure-nbt:4.9.3"
    compileOnly "net.kyori:adventure-platform-api:4.0.1"
    compileOnly "net.kyori:adventure-platform-spongeapi:4.0.1"
    compileOnly "net.kyori:adventure-platform-bungeecord:4.0.1"
    compileOnly "net.kyori:adventure-platform-facet:4.0.1"
    compileOnly "net.kyori:adventure-serializer-configurate4:4.9.3"
    compileOnly "net.kyori:adventure-text-serializer-spongeapi:4.0.0-SNAPSHOT"
    compileOnly "net.kyori:adventure-text-serializer-gson:4.9.3"
    compileOnly "net.kyori:adventure-text-serializer-gson-legacy-impl:4.9.3"
    compileOnly "net.kyori:adventure-text-serializer-legacy:4.9.3"
    compileOnly "net.kyori:adventure-text-serializer-plain:4.9.3"
    compileOnly "net.kyori:examination-api:1.1.0"
    compileOnly "net.kyori:examination-string:1.1.0"
    compileOnly "net.kyori:event-api:5.0.0-SNAPSHOT"
}

jar {
    manifest.attributes('Implementation-Title': 'RealEstate')
    manifest.attributes('Implementation-Version': "$version")
    manifest.attributes('Git-Hash': project.ext.getGitHash())
    classifier = 'SNAPSHOT'
    baseName = 'realestate-sponge'
}

if (JavaVersion.current().isJava8Compatible()) {
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

tasks.assemble {
   dependsOn(tasks.shadowJar)
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

tasks.assemble {
   dependsOn(tasks.shadowJar)
}

artifacts {
    archives shadowJar
}

tasks {
    shadowJar {
    //project.configurations.implementation.canBeResolved = true
    //configurations = [project.configurations.implementation]
    //configurations = [project.configurations.compileClasspath]
        dependencies {
            include dependency("org.spongepowered:configurate-core:4.1.2")
            include dependency("org.spongepowered:configurate-gson:4.1.2")
            include dependency("org.spongepowered:configurate-hocon:4.1.2")
            include dependency("org.spongepowered:configurate-yaml:4.1.2")
            include dependency("com.typesafe:config:1.3.2")
            include dependency("co.aikar:acf-core:0.5.0-SNAPSHOT")
            include dependency("co.aikar:acf-sponge:0.5.0-SNAPSHOT")
            include dependency("co.aikar:locales:1.0-SNAPSHOT")
            include dependency("co.aikar:Table:1.0.0-SNAPSHOT")
            include dependency("io.leangen.geantyref:geantyref:1.3.11")
            exclude dependency("io.github.nucleuspowered:nucleus-api:1.4.2-S7.0")
        }
        relocate("com.typesafe.config", "me.EtienneDx.lib.typesafe.config")
        relocate("co.aikar.commands", "me.EtienneDx.lib.aikar")
        relocate("io.leangen.geantyref", "me.EtienneDx.lib.geantyref")
        relocate("org.spongepowered.configurate", "me.EtienneDx.lib.configurate")
        exclude 'META-INF/versions/**', 'META-INF/maven/**'
        classifier = ''
        exclude "dummyThing"
   }
   reobf {
      create("shadowJar")
   }
}